import time
import streamlit as st

from src.models import Answer
from src.session_state import correct_answer_update_session_state, incorrect_answer_update_session_state, next_problem_update_session_state


def score_time_container(gs_remaining_time: int):
    # „Çπ„Ç≥„Ç¢„Å®ÊÆã„ÇäÊôÇÈñì„ÅÆË°®Á§∫Áî®„ÅÆ„Ç≥„É≥„ÉÜ„Éä„Çí‰ΩúÊàê
    score_time_container = st.empty()

    # ÊÆã„ÇäÊôÇÈñì„Å®„Çπ„Ç≥„Ç¢„ÅÆË°®Á§∫
    with score_time_container:
        col1, col2 = st.columns(2)
        with col1:
            st.write("### ‚è≥ ÊÆã„ÇäÊôÇÈñìÔºö", f"{gs_remaining_time}Áßí")
        with col2:
            st.write("### üéØ „Çπ„Ç≥„Ç¢Ôºö", f"{st.session_state.score}ÁÇπ")


def community_cards():
    # „Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Ç´„Éº„ÉâË°®Á§∫
    community_cards = ' '.join(str(
        card) for card in st.session_state.problem_list[st.session_state.current_problem_index].community_cards)
    st.write("üÉè „Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Ç´„Éº„Éâ")
    st.write(f"##### {community_cards}")
    st.write("")
    st.write("üë• „Éó„É¨„Ç§„É§„Éº„ÅÆÊâãÊú≠")


def game_container():
    # „Éó„É¨„Ç§„É§„Éº„ÅÆÊâãÊú≠„Å®„Éú„Çø„É≥„ÇíË°®Á§∫„Åô„Çã„Ç≥„É≥„ÉÜ„Éä
    game_container = st.container()

    with game_container:
        for i, hand in enumerate(st.session_state.problem_list[st.session_state.current_problem_index].player_hands, 1):
            cols = st.columns([2, 1])
            with cols[0]:
                st.write(f"##### „Éó„É¨„Ç§„É§„Éº{i}Ôºö{str(hand[0])} {str(hand[1])}")
            with cols[1]:
                if st.button(f"„Éó„É¨„Ç§„É§„Éº{i}„ÇíÈÅ∏Êäû", key=f"btn_{i}_{st.session_state.key_suffix}", use_container_width=True):
                    if i == st.session_state.problem_list[st.session_state.current_problem_index].correct_answer:
                        correct_answer_update_session_state(i)
                    else:
                        incorrect_answer_update_session_state(i)

        # „Çπ„Éó„É™„ÉÉ„Éà„Éù„ÉÉ„Éà„ÅÆ„Éú„Çø„É≥„ÇíÂêå„ÅòÂπÖ„ÅßÈÖçÁΩÆ
        cols = st.columns([2, 1])
        with cols[0]:
            st.write("")
        with cols[1]:
            if st.button("„ÉÅ„Éß„ÉÉ„Éó", key=f"btn_3_{st.session_state.key_suffix}", use_container_width=True):
                if 3 == st.session_state.problem_list[st.session_state.current_problem_index].correct_answer:
                    correct_answer_update_session_state(3)
                else:
                    incorrect_answer_update_session_state(3)

    st.write("")

    # „É°„ÉÉ„Çª„Éº„Ç∏Ë°®Á§∫Áî®„ÅÆ„Ç≥„É≥„ÉÜ„Éä„Çí‰ΩúÊàê
    message_container = st.empty()

    # „É°„ÉÉ„Çª„Éº„Ç∏„ÇíË°®Á§∫
    if hasattr(st.session_state, 'temp_message'):
        with message_container:
            if st.session_state.temp_message["type"] == "success":
                st.success(st.session_state.temp_message["text"])
            else:
                st.error(st.session_state.temp_message["text"])
        # 1ÁßíÂæå„Å´„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÊ∂àÂéª
        time.sleep(1)
        delattr(st.session_state, 'temp_message')
        message_container.empty()

        # Ê¨°„ÅÆÂïèÈ°å„Å´ÈÄ≤„ÇÄ
        next_problem_update_session_state()

def answer_history(i:int, answer:Answer):
    with st.expander(f"ÂïèÈ°å {i} ({'+' if answer.point > 0 else ''}{answer.point}ÁÇπ)"):
                # „Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Ç´„Éº„Éâ„ÅÆË°®Á§∫
                community_cards = ' '.join(
                    str(card) for card in answer.problem.community_cards)
                st.write("üÉè „Ç≥„Éü„É•„Éã„ÉÜ„Ç£„Ç´„Éº„Éâ")
                st.write(f"##### {community_cards}")

                # „Éó„É¨„Ç§„É§„Éº„ÅÆÊâãÊú≠„ÇíË°®Á§∫
                st.write("üë• „Éó„É¨„Ç§„É§„Éº„ÅÆÊâãÊú≠")
                for j, hand in enumerate(answer.problem.player_hands, 1):
                    hand_str = f"{str(hand[0])} {str(hand[1])}"
                    if j == answer.problem.correct_answer:
                        st.write(f"##### „Éó„É¨„Ç§„É§„Éº{j}Ôºö{hand_str} ‚úÖ (Ê≠£Ëß£)")
                    else:
                        st.write(f"##### „Éó„É¨„Ç§„É§„Éº{j}Ôºö{hand_str}")

                # „Éó„É¨„Ç§„É§„Éº„ÅÆÂõûÁ≠î„ÇíË°®Á§∫
                st.write("")
                st.write("„ÅÇ„Å™„Åü„ÅÆÂõûÁ≠î:")
                if answer.player_answer == 3:
                    answer_text = "„ÉÅ„Éß„ÉÉ„Éó"
                else:
                    answer_text = f"„Éó„É¨„Ç§„É§„Éº{answer.player_answer}"

                if answer.point > 0:
                    st.success(f"‚úÖ {answer_text} (Ê≠£Ëß£)")
                else:
                    if answer.problem.correct_answer == 3:
                        correct_text = "„ÉÅ„Éß„ÉÉ„Éó"
                    else:
                        correct_text = f"„Éó„É¨„Ç§„É§„Éº{answer.problem.correct_answer}"
                    st.error(f"‚ùå {answer_text} (Ê≠£Ëß£„ÅØ {correct_text})")